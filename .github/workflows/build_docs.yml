# build the documentation and upload the built artifact
name: build documentation

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main]
  workflow_run:
    workflows:
      - "contributor check"
    types:
      - completed

jobs:
  build:
    runs-on: 4-core-ubuntu-gpu-t4
    permissions:
      contents: read
      # Needed to manually set commit status
      statuses: write

    steps:
    
    # Check out the code
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # The path to the sha of the commit we want to build will depend
        # on the trigger type. If a workflow_run trigger, then we want
        # the sha from the head of the branch that triggered it. For 
        # pushes and manual triggers, we want the sha of the branch.
        ref: |
          ${{
            github.event.workflow_run.head_sha ||
            github.event.pull_request.head.sha ||
            github.sha
          }}
        # Optional: get full history if needed
        fetch-depth: 0
    
    - name: Setup
      uses: ./.github/actions/multi-trigger-setup
      with:
          status-context: '${{ github.job }}'

    - name: Install pandoc
      run: sudo apt-get -y install pandoc

    # Install dependencies
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e packages/fairchem-core[docs,adsorbml,quacc] -e packages/fairchem-data-oc[dev] -e packages/fairchem-applications-cattsunami

    # Build the book
    - name: Build the book
      env:
        QUACC_CONFIG_FILE: docs/.quacc.yml
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        # Set FAST_DOCS only if not a push to main
        FAST_DOCS: ${{ (github.event_name != 'push' || github.ref != 'refs/heads/main') && 'true' || '' }}
      run: |
        # Convert MyST markdown files to Jupyter notebooks if needed to get download as ipynb buttons
        jupytext --to ipynb ./docs/uma_tutorials/uma_tutorial.md
        # find ./docs/ -name "*.md" -exec grep -q "format_name: myst" {} \; -print0 | xargs -0 jupytext --to ipynb
        jupyter-book build docs

    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: docs-html
        path: docs/_build/html/*
    
    - name: Cleanup
      if: always()
      uses: ./.github/actions/multi-trigger-cleanup
      with:
          status-context: '${{ github.job }}'
